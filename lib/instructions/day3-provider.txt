CREATE TABMANAGER - CHANGENOTIFIER
1. Add provider: ^6.0.1 to the pubspec.yaml
2. Create the tab manager file in models directory 
   - this extends ChangeNotifier. This allows the object to provide change notifications to its listeners
   - notifyListeners() notifies all widgets listening to this state
3. add TabManager to models.dart

MANAGING TAB STATE
LOGIC:
1. Provide TabManager change notifier at the root level of PcpsFoodies. 
   This allows descendant widgets to access the tab manager.
2. Wrap a Consumer around Home. This ensures that Home displays the right
   screen anytime TabManager's tab index changes.
3. Since Provider is a wrapper around inherited widgets, EmptyGroceryScreen can
   access the TabManager state object through its context.
4. goToRecipes() changes the tab index, notifying Consumer, which then rebuilds
   Home with the correct tab to display.

STEPS :
Update main.dart - add MultiProvider in the home parameter
Setup the consumer in home.dart 
Setup Provider.of in empty_grocery_screen.dart file


MANAGING THE GROCERY ITEMS
1. Create grocery_manager.dart in models directory.
2. Add grocery_manager.dart to models.dart.
3. Add GroceryManger provider in main.dart.
4. Consume the GroceryManager in the grocery_screen.dart file. 
5. Write the buildGroceryScreen Function
6. Add scaffold and floating action button to the grocery screen page.



